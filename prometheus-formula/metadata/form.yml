prometheus:
  $type: namespace

  enabled:
    $type: boolean
    $default: True

  scrape_interval:
    $type: number
    $name: Scrape interval (s)
    $default: 15
    $disabled: "!formValues.prometheus.enabled"
    $required: true

  evaluation_interval:
    $type: number
    $name: Evaluation interval (s)
    $default: 15
    $disabled: "!formValues.prometheus.enabled"
    $required: true

  tls:
    $type: group
    $name: TLS
    $help: >
      TLS configuration. Please ensure the files are present on the minion and readable for
      the user `prometheus` before applying the highstate. Please update Grafana formula
      configuration accordingly.

    enabled:
      $type: boolean
      $default: False

    server_certificate:
      $name: Server Certificate
      $placeholder: /etc/ssl/server.crt
      $visible: this.parent.value.enabled == true

    server_key:
      $name: Server Key
      $placeholder: /etc/ssl/server.key
      $visible: this.parent.value.enabled == true

    username:
      $name: User
      $help: Prometheus server admin user
      $visible: this.parent.value.enabled == true

    password:
      $name: Password Hash
      $help: Prometheus server password hashed with bcrypt
      $visible: this.parent.value.enabled == true

  mgr:
    $type: group
    $name: ${productName}
    $disabled: "!formValues.prometheus.enabled"

    monitor_server:
      $name: Monitor this server
      $type: boolean
      $default: True

    autodiscover_clients:
      $name: Autodiscover clients
      $type: boolean
      $default: True

    sd_username:
      $type: text
      $name: Username
      $help: Username for auto-discovering clients
      $default: admin
      $visible: "this.parent.value.autodiscover_clients"
      $required: true

    sd_password:
      $type: password
      $name: Password
      $help: Password for auto-discovering clients
      $visible: "this.parent.value.autodiscover_clients"
      $required: true

    targets_tls:
      $type: group
      $name: Targets TLS
      $help: >
        TLS configuration for monitored targets. Please ensure the files are present before
        applying the highstate. Please update `Prometheus Exporters` formula accordingly.

      enabled:
        $type: boolean
        $default: False

      ca_certificate:
        $name: CA Certificate
        $default: /etc/pki/trust/anchors/RHN-ORG-TRUSTED-SSL-CERT
        $visible: this.parent.value.enabled == true

      client_certificate:
        $name: Client Certificate
        $placeholder: /etc/ssl/server.crt
        $visible: this.parent.value.enabled == true

      client_key:
        $name: Client Private Key
        $placeholder: /etc/ssl/server.key
        $visible: this.parent.value.enabled == true

  alerting:
    $type: group
    $disabled: "!formValues.prometheus.enabled"

    alertmanager_service:
      $type: boolean
      $default: True
      $name: Enable local Alertmanager service
      $help: Install and start local Alertmanager without clustering

    use_local_alertmanager:
      $type: boolean
      $name: Use local Alertmanager
      $help: Use local Alertmanager for this Prometheus instance (without HA)
      $visible: "this.parent.value.alertmanager_service"
      $default: True

    default_rules:
      $type: boolean
      $default: True
      $name: Enable default alerting rules

    alertmanagers:
      $type: edit-group
      $minItems: 0
      $itemName: Target ${i}
      $help: Configure Alertmanager HA cluster targets
      $prototype:
        $type: group
        $key:
          $type: text
          $name: "IP Address : Port"
          $default: localhost:9093
          $match: "\\S*:\\d{1,5}"

    rule_files:
      $type: edit-group
      $minItems: 0
      $prototype:
        $type: text
        $default: /etc/prometheus/my-rules.yml
        $required: true

  federation:
    $type: edit-group
    $name: Federation
    $minItems: 0
    $itemName: Prometheus server ${i}
    $disabled: "!formValues.prometheus.enabled"
    $prototype:
      $type: group
      $key:
        $type: text
        $name: "Job name"
        $default: "federate"
      match:
        $type: edit-group
        $minItems: 1
        $name: "Metric name patterns"
        $prototype:
            $type: text
            $default: "node:.*"
      targets:
        $type: edit-group
        $minItems: 1
        $itemName: Target ${i}
        $prototype:
          $type: text
          $placeholder: "IP Address : Port"
          $match: "\\S*:\\d{1,5}"

  scrape_configs:
    $type: edit-group
    $name: User defined scrape configurations
    $minItems: 0
    $itemName: File-based service discovery ${i}
    $disabled: "!formValues.prometheus.enabled"
    $prototype:
      $type: group
      $key:
        $type: text
        $name: "Job name"
      files:
        $type: edit-group
        $minItems: 1
        $prototype:
          $type: text
          $default: /etc/prometheus/my-scrape-config.yml
          $required: true
